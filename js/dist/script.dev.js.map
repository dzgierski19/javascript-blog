{"version":3,"sources":["script.js"],"names":["templates","articleLink","Handlebars","compile","document","querySelector","innerHTML","tagLink","authorLink","tagCloudLink","authorCloudLink","titleClickHandler","event","preventDefault","clickedElement","activeLinks","querySelectorAll","activeLink","classList","remove","add","activeArticles","activeArticle","articleSelector","getAttribute","targetArticle","optArticleSelector","optTitleSelector","optTitleListSelector","optArticleTagsSelector","optArticleAuthorSelector","optCloudClassCount","generateTitleLinks","customSelector","titleList","articles","html","article","articleId","articleTitle","linkHTMLData","id","title","linkHTML","links","link","addEventListener","calculateTagsParams","tags","params","max","min","tag","Math","calculateTagClass","count","normalizedCount","normalizedMax","percentage","classNumber","floor","generateTags","allTags","articleTagWrapper","articleTags","articleTagsArray","split","hasOwnProperty","tagList","tagsParams","allTagsData","push","className","tagClickHandler","href","replace","tagActive","activeTag","tagLinks","console","log","addClickListenersToTags","allLinksToTags","allLinkToTags","calculateAuthorsParams","authors","author","calculateAuthorClass","generateAuthors","allAuthors","articleAuthorWrapper","articleAuthors","authorCloudList","authorParams","allAuthorsData","allAuthor","authorClickHandler","authorActive","activeAuthor","authorLinks","addClickListenersToAuthors","allLinksToAuthors","allLinkToAuthors","allPostRefreshArticleList","getElementById"],"mappings":"AAAA;;AAEA,IAAMA,SAAS,GAAG;AAEhBC,EAAAA,WAAW,EAAEC,UAAU,CAACC,OAAX,CAAmBC,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,EAAiDC,SAApE,CAFG;AAGhBC,EAAAA,OAAO,EAAEL,UAAU,CAACC,OAAX,CAAmBC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,EAA6CC,SAAhE,CAHO;AAIhBE,EAAAA,UAAU,EAAEN,UAAU,CAACC,OAAX,CAAmBC,QAAQ,CAACC,aAAT,CAAuB,uBAAvB,EAAgDC,SAAnE,CAJI;AAKhBG,EAAAA,YAAY,EAAEP,UAAU,CAACC,OAAX,CAAmBC,QAAQ,CAACC,aAAT,CAAuB,0BAAvB,EAAmDC,SAAtE,CALE;AAMhBI,EAAAA,eAAe,EAAER,UAAU,CAACC,OAAX,CAAmBC,QAAQ,CAACC,aAAT,CAAuB,6BAAvB,EAAsDC,SAAzE;AAND,CAAlB;;AASA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAASC,KAAT,EAAgB;AAExCA,EAAAA,KAAK,CAACC,cAAN;AAEA,MAAMC,cAAc,GAAG,IAAvB;AACA;;AAEA,MAAMC,WAAW,GAAGX,QAAQ,CAACY,gBAAT,CAA0B,kBAA1B,CAApB;AAPwC;AAAA;AAAA;;AAAA;AASxC,yBAAuBD,WAAvB,8HAAoC;AAAA,UAA3BE,UAA2B;AAClCA,MAAAA,UAAU,CAACC,SAAX,CAAqBC,MAArB,CAA4B,QAA5B;AACD;AACD;;AAZwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcxCL,EAAAA,cAAc,CAACI,SAAf,CAAyBE,GAAzB,CAA6B,QAA7B;AAEA;;AAEA,MAAMC,cAAc,GAAGjB,QAAQ,CAACY,gBAAT,CAA0B,4BAA1B,CAAvB;AAlBwC;AAAA;AAAA;;AAAA;AAoBxC,0BAA0BK,cAA1B,mIAA0C;AAAA,UAAjCC,aAAiC;AACxCA,MAAAA,aAAa,CAACJ,SAAd,CAAwBC,MAAxB,CAA+B,QAA/B;AACD;AACD;;AAvBwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAyBxC,MAAMI,eAAe,GAAGT,cAAc,CAACU,YAAf,CAA4B,MAA5B,CAAxB;AAEA;;AAEA,MAAMC,aAAa,GAAGrB,QAAQ,CAACC,aAAT,CAAuBkB,eAAvB,CAAtB;AAEA;;AAEAE,EAAAA,aAAa,CAACP,SAAd,CAAwBE,GAAxB,CAA4B,QAA5B;AAED,CAnCD;;AAqCA,IAAMM,kBAAkB,GAAG,OAA3B;AACA,IAAMC,gBAAgB,GAAG,aAAzB;AACA,IAAMC,oBAAoB,GAAG,SAA7B;AACA,IAAMC,sBAAsB,GAAG,kBAA/B;AACA,IAAMC,wBAAwB,GAAG,cAAjC;AACA,IAAMC,kBAAkB,GAAI,CAA5B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAA8B;AAAA,MAArBC,cAAqB,uEAAJ,EAAI;;AAEvD;AAEA,MAAMC,SAAS,GAAG9B,QAAQ,CAACC,aAAT,CAAuBuB,oBAAvB,CAAlB;AACAM,EAAAA,SAAS,CAAC5B,SAAV,GAAsB,EAAtB;AAEA;;AAEA,MAAM6B,QAAQ,GAAG/B,QAAQ,CAACY,gBAAT,CAA0BU,kBAAkB,GAAGO,cAA/C,CAAjB;AACA,MAAIG,IAAI,GAAG,EAAX;AAVuD;AAAA;AAAA;;AAAA;AAYvD,0BAAoBD,QAApB,mIAA8B;AAAA,UAArBE,OAAqB;;AAE5B;AAEA,UAAMC,SAAS,GAAGD,OAAO,CAACb,YAAR,CAAqB,IAArB,CAAlB;AAEA;;AACA;;AAEA,UAAMe,YAAY,GAAGF,OAAO,CAAChC,aAAR,CAAsBsB,gBAAtB,EAAwCrB,SAA7D;AAEA;;AAEA,UAAMkC,YAAY,GAAG;AAACC,QAAAA,EAAE,EAAEH,SAAL;AAAgBI,QAAAA,KAAK,EAAEH;AAAvB,OAArB;AACA,UAAMI,QAAQ,GAAG3C,SAAS,CAACC,WAAV,CAAsBuC,YAAtB,CAAjB;AAEA;;AAEAJ,MAAAA,IAAI,GAAGA,IAAI,GAAGO,QAAd;AACD;AA/BsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiCvDT,EAAAA,SAAS,CAAC5B,SAAV,GAAsB8B,IAAtB;AACA,MAAMQ,KAAK,GAAGxC,QAAQ,CAACY,gBAAT,CAA0B,WAA1B,CAAd;AAlCuD;AAAA;AAAA;;AAAA;AAoCvD,0BAAiB4B,KAAjB,mIAAwB;AAAA,UAAfC,IAAe;AACtBA,MAAAA,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+BnC,iBAA/B;AACD;AAtCsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCxD,CAvCD;;AAyCAqB,kBAAkB;;AAElB,IAAMe,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAUC,IAAV,EAAgB;AAE1C,MAAMC,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAE,CADQ;AAEbC,IAAAA,GAAG,EAAE;AAFQ,GAAf;;AAKA,OAAK,IAAIC,GAAT,IAAgBJ,IAAhB,EAAsB;AACpBC,IAAAA,MAAM,CAACC,GAAP,GAAaG,IAAI,CAACH,GAAL,CAASF,IAAI,CAACI,GAAD,CAAb,EAAoBH,MAAM,CAACC,GAA3B,CAAb;AACAD,IAAAA,MAAM,CAACE,GAAP,GAAaE,IAAI,CAACF,GAAL,CAASH,IAAI,CAACI,GAAD,CAAb,EAAoBH,MAAM,CAACE,GAA3B,CAAb;AACD;;AACD,SAAOF,MAAP;AACD,CAZD;;AAcA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,KAAV,EAAiBN,MAAjB,EAAyB;AAEjD,MAAMO,eAAe,GAAGD,KAAK,GAAGN,MAAM,CAACE,GAAvC;AACA,MAAMM,aAAa,GAAGR,MAAM,CAACC,GAAP,GAAaD,MAAM,CAACE,GAA1C;AACA,MAAMO,UAAU,GAAGF,eAAe,GAAGC,aAArC;AACA,MAAME,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAYF,UAAU,IAAI3B,kBAAkB,GAAG,CAAzB,CAAV,GAAwC,CAApD,CAApB;AAEA,SAAO4B,WAAP;AAED,CATD;;AAWA,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAW;AAE9B;AAEA,MAAIC,OAAO,GAAG,EAAd;AAEA;;AAEA,MAAM3B,QAAQ,GAAG/B,QAAQ,CAACY,gBAAT,CAA0BU,kBAA1B,CAAjB;AAEA;;AAV8B;AAAA;AAAA;;AAAA;AAY9B,0BAAoBS,QAApB,mIAA8B;AAAA,UAArBE,OAAqB;;AAE5B;AAEA,UAAM0B,iBAAiB,GAAG1B,OAAO,CAAChC,aAAR,CAAsBwB,sBAAtB,CAA1B;AAEA;;AAEA,UAAIO,IAAI,GAAG,EAAX;AAEA;;AAEA,UAAM4B,WAAW,GAAG3B,OAAO,CAACb,YAAR,CAAqB,WAArB,CAApB;AAEA;;AAEA,UAAMyC,gBAAgB,GAAGD,WAAW,CAACE,KAAZ,CAAkB,GAAlB,CAAzB;AAEA;;AAlB4B;AAAA;AAAA;;AAAA;AAqB5B,8BAAgBD,gBAAhB,mIAAkC;AAAA,cAAzBb,IAAyB;;AAEhC;AAEA,cAAMZ,YAAY,GAAG;AAACC,YAAAA,EAAE,EAAEW,IAAL;AAAUV,YAAAA,KAAK,EAAEU;AAAjB,WAArB;AACA,cAAMT,QAAQ,GAAG3C,SAAS,CAACO,OAAV,CAAkBiC,YAAlB,CAAjB;AAEA;;AAEAJ,UAAAA,IAAI,GAAGA,IAAI,GAAGO,QAAd;AAEA;;AAEA,cAAG,CAACmB,OAAO,CAACK,cAAR,CAAuBf,IAAvB,CAAJ,EAAiC;AAE/B;AAEAU,YAAAA,OAAO,CAACV,IAAD,CAAP,GAAe,CAAf;AAED,WAND,MAMO;AAELU,YAAAA,OAAO,CAACV,IAAD,CAAP;AAED;AACD;;AAED;AAED;;AAjD4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmD5BW,MAAAA,iBAAiB,CAACzD,SAAlB,GAA8B8B,IAA9B;AAEA;AACD;AAED;;AApE8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsE9B,MAAMgC,OAAO,GAAGhE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AAEA;;AAEA,MAAMgE,UAAU,GAAGtB,mBAAmB,CAACe,OAAD,CAAtC;AAGA,MAAMQ,WAAW,GAAG;AAACtB,IAAAA,IAAI,EAAE;AAAP,GAApB;AAEA;;AAEA,OAAK,IAAII,GAAT,IAAgBU,OAAhB,EAAyB;AAEvB;AAEAQ,IAAAA,WAAW,CAACtB,IAAZ,CAAiBuB,IAAjB,CAAsB;AACpBnB,MAAAA,GAAG,EAAEA,GADe;AAEpBG,MAAAA,KAAK,EAAEO,OAAO,CAACV,GAAD,CAFM;AAGpBoB,MAAAA,SAAS,EAAElB,iBAAiB,CAACQ,OAAO,CAACV,GAAD,CAAR,EAAeiB,UAAf;AAHR,KAAtB;AAKD;AAED;;AACA;;;AAEAD,EAAAA,OAAO,CAAC9D,SAAR,GAAoBN,SAAS,CAACS,YAAV,CAAuB6D,WAAvB,CAApB;AACD,CAhGD;;AAkGAT,YAAY;;AAEZ,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAU7D,KAAV,EAAiB;AAEvC;AAEAA,EAAAA,KAAK,CAACC,cAAN;AAEA;;AAEA,MAAMC,cAAc,GAAG,IAAvB;AAEA;;AAEA,MAAM4D,IAAI,GAAG5D,cAAc,CAACU,YAAf,CAA4B,MAA5B,CAAb;AAEA;;AAEA,MAAM4B,GAAG,GAAGsB,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAZ;AAEA;;AAEA,MAAMC,SAAS,GAAGxE,QAAQ,CAACY,gBAAT,CAA0B,yBAA1B,CAAlB;AAEA;;AAtBuC;AAAA;AAAA;;AAAA;AAwBvC,0BAAsB4D,SAAtB,mIAAiC;AAAA,UAAxBC,SAAwB;;AAE/B;AAEAA,MAAAA,SAAS,CAAC3D,SAAV,CAAoBC,MAApB,CAA2B,QAA3B;AAEA;AAED;AAED;;AAlCuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoCvC,MAAM2D,QAAQ,GAAG1E,QAAQ,CAACY,gBAAT,CAA0B,aAAa0D,IAAb,GAAoB,IAA9C,CAAjB;AAEA;;AAtCuC;AAAA;AAAA;;AAAA;AAwCvC,0BAAoBI,QAApB,mIAA8B;AAAA,UAArBvE,OAAqB;;AAE5B;AAEAA,MAAAA,OAAO,CAACW,SAAR,CAAkBE,GAAlB,CAAsB,QAAtB;AAEA;AAED;AAED;;AAlDuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoDvCY,EAAAA,kBAAkB,CAAC,kBAAkBoB,GAAlB,GAAwB,IAAzB,CAAlB;AACA2B,EAAAA,OAAO,CAACC,GAAR,CAAYhD,kBAAZ;AAED,CAvDD;;AAyDA,IAAMiD,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAY;AAE1C;AAEA,MAAMC,cAAc,GAAG9E,QAAQ,CAACY,gBAAT,CAA2B,kBAA3B,CAAvB;AAEA;;AAN0C;AAAA;AAAA;;AAAA;AAQ1C,0BAA0BkE,cAA1B,mIAA0C;AAAA,UAAjCC,aAAiC;;AAExC;AAEAA,MAAAA,aAAa,CAACrC,gBAAd,CAA+B,OAA/B,EAAwC2B,eAAxC;AAEA;AAED;AAhByC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB3C,CAjBD;;AAmBAQ,uBAAuB;;AAEvB,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUC,OAAV,EAAmB;AAEhD,MAAMpC,MAAM,GAAG;AACbC,IAAAA,GAAG,EAAE,CADQ;AAEbC,IAAAA,GAAG,EAAE;AAFQ,GAAf;;AAKA,OAAK,IAAImC,MAAT,IAAmBD,OAAnB,EAA4B;AAC1BpC,IAAAA,MAAM,CAACC,GAAP,GAAaG,IAAI,CAACH,GAAL,CAASmC,OAAO,CAACC,MAAD,CAAhB,EAA0BrC,MAAM,CAACC,GAAjC,CAAb;AACAD,IAAAA,MAAM,CAACE,GAAP,GAAaE,IAAI,CAACF,GAAL,CAASkC,OAAO,CAACC,MAAD,CAAhB,EAA0BrC,MAAM,CAACE,GAAjC,CAAb;AACD;;AACD,SAAOF,MAAP;AACD,CAZD;;AAcA,IAAMsC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUhC,KAAV,EAAiBN,MAAjB,EAAyB;AAEpD,MAAMO,eAAe,GAAGD,KAAK,GAAGN,MAAM,CAACE,GAAvC;AACA,MAAMM,aAAa,GAAGR,MAAM,CAACC,GAAP,GAAaD,MAAM,CAACE,GAA1C;AACA,MAAMO,UAAU,GAAGF,eAAe,GAAGC,aAArC;AACA,MAAME,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAYF,UAAU,IAAI3B,kBAAkB,GAAG,CAAzB,CAAV,GAAwC,CAApD,CAApB;AACA,SAAO4B,WAAP;AAED,CARD;;AAWA,IAAM6B,eAAe,GAAG,SAAlBA,eAAkB,GAAW;AAEjC;AACA,MAAIC,UAAU,GAAG,EAAjB;AAEA;;AAEA,MAAMtD,QAAQ,GAAG/B,QAAQ,CAACY,gBAAT,CAA0BU,kBAA1B,CAAjB;AAEA;;AATiC;AAAA;AAAA;;AAAA;AAWjC,2BAAoBS,QAApB,wIAA8B;AAAA,UAArBE,OAAqB;;AAE5B;AAEA,UAAMqD,oBAAoB,GAAGrD,OAAO,CAAChC,aAAR,CAAsByB,wBAAtB,CAA7B;AAEA;;AAEA,UAAIM,IAAI,GAAG,EAAX;AAEA;;AAEA,UAAMuD,cAAc,GAAGtD,OAAO,CAACb,YAAR,CAAqB,aAArB,CAAvB;AAEA;;AAEA,UAAMgB,YAAY,GAAG;AAACC,QAAAA,EAAE,EAAEkD,cAAL;AAAqBjD,QAAAA,KAAK,EAAEiD;AAA5B,OAArB;AACA,UAAMhD,QAAQ,GAAG3C,SAAS,CAACQ,UAAV,CAAqBgC,YAArB,CAAjB;AAEA;;AAEAJ,MAAAA,IAAI,GAAGA,IAAI,GAAGO,QAAd;AACA;;AAEA,UAAG,CAAC8C,UAAU,CAACtB,cAAX,CAA0BwB,cAA1B,CAAJ,EAA+C;AAE7C;AAEAF,QAAAA,UAAU,CAACE,cAAD,CAAV,GAA6B,CAA7B;AAED,OAND,MAMO;AAELF,QAAAA,UAAU,CAACE,cAAD,CAAV;AAED;AAED;;;AAEAD,MAAAA,oBAAoB,CAACpF,SAArB,GAAiC8B,IAAjC;AAEA;AAED;AACD;;AAtDiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwDjC,MAAMwD,eAAe,GAAGxF,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAxB;AACA;;AAEA,MAAMwF,YAAY,GAAGT,sBAAsB,CAACK,UAAD,CAA3C;AAEA,MAAIK,cAAc,GAAG;AAACT,IAAAA,OAAO,EAAE;AAAV,GAArB;AAEA;;AACA,OAAK,IAAIU,SAAT,IAAsBN,UAAtB,EAAmC;AAEjCK,IAAAA,cAAc,CAACT,OAAf,CAAuBd,IAAvB,CAA4B;AAE1Be,MAAAA,MAAM,EAAES,SAFkB;AAG1BxC,MAAAA,KAAK,EAAEkC,UAAU,CAACM,SAAD,CAHS;AAI1BvB,MAAAA,SAAS,EAAEe,oBAAoB,CAACE,UAAU,CAACM,SAAD,CAAX,EAAwBF,YAAxB;AAJL,KAA5B;AAOA;AACD;AACD;;;AAEAD,EAAAA,eAAe,CAACtF,SAAhB,GAA4BN,SAAS,CAACU,eAAV,CAA0BoF,cAA1B,CAA5B;AACD,CA9ED;;AAgFAN,eAAe;;AAEf,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUpF,KAAV,EAAiB;AAE1C;AAEAA,EAAAA,KAAK,CAACC,cAAN;AAEA;;AAEA,MAAMC,cAAc,GAAG,IAAvB;AAEA;;AAEA,MAAM4D,IAAI,GAAG5D,cAAc,CAACU,YAAf,CAA4B,MAA5B,CAAb;AAEA;;AAEA,MAAM8D,MAAM,GAAGZ,IAAI,CAACC,OAAL,CAAa,UAAb,EAAyB,EAAzB,CAAf;AAEA;;AAEA,MAAMsB,YAAY,GAAG7F,QAAQ,CAACY,gBAAT,CAA0B,4BAA1B,CAArB;AAEA;;AAtB0C;AAAA;AAAA;;AAAA;AAwB1C,2BAAyBiF,YAAzB,wIAAuC;AAAA,UAA9BC,YAA8B;;AAErC;AAEAA,MAAAA,YAAY,CAAChF,SAAb,CAAuBC,MAAvB,CAA8B,QAA9B;AAED;AAED;;AAhC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkC1C,MAAMgF,WAAW,GAAG/F,QAAQ,CAACY,gBAAT,CAA0B,aAAa0D,IAAb,GAAoB,IAA9C,CAApB;AAEA;;AApC0C;AAAA;AAAA;;AAAA;AAsC1C,2BAAuByB,WAAvB,wIAAoC;AAAA,UAA3B3F,UAA2B;;AAElC;AAEAA,MAAAA,UAAU,CAACU,SAAX,CAAqBE,GAArB,CAAyB,QAAzB;AAEA;AAED;AAED;;AAhD0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkD1CY,EAAAA,kBAAkB,CAAC,mBAAmBsD,MAAnB,GAA4B,IAA7B,CAAlB;AAED,CApDD;;AAsDA,IAAMc,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAY;AAE7C;AAEA,MAAMC,iBAAiB,GAAGjG,QAAQ,CAACY,gBAAT,CAA2B,oBAA3B,CAA1B;AAGA;;AAP6C;AAAA;AAAA;;AAAA;AAS7C,2BAA6BqF,iBAA7B,wIAAgD;AAAA,UAAvCC,gBAAuC;;AAE9C;AAEAA,MAAAA,gBAAgB,CAACxD,gBAAjB,CAAkC,OAAlC,EAA2CkD,kBAA3C;AAEA;AAED;AAjB4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkB9C,CAlBD;;AAoBAI,0BAA0B;AAE1B,IAAMG,yBAAyB,GAAGnG,QAAQ,CAACoG,cAAT,CAAwB,WAAxB,CAAlC;AAEAD,yBAAyB,CAACzD,gBAA1B,CAA2C,OAA3C,EAAoD,YAAW;AAC7Dd,EAAAA,kBAAkB;AACnB,CAFD","sourcesContent":["'use strict';\n\nconst templates = {\n\n  articleLink: Handlebars.compile(document.querySelector('#template-article-link').innerHTML),\n  tagLink: Handlebars.compile(document.querySelector('#template-tag-link').innerHTML),\n  authorLink: Handlebars.compile(document.querySelector('#template-author-link').innerHTML),\n  tagCloudLink: Handlebars.compile(document.querySelector('#template-tag-cloud-link').innerHTML),\n  authorCloudLink: Handlebars.compile(document.querySelector('#template-author-cloud-link').innerHTML),\n};\n\nconst titleClickHandler = function(event) {\n\n  event.preventDefault();\n\n  const clickedElement = this;\n  /* remove class 'active' from all article links  */\n\n  const activeLinks = document.querySelectorAll('.titles a.active');\n\n  for (let activeLink of activeLinks) {\n    activeLink.classList.remove('active');\n  }\n  /* add class 'active' to the clicked link */\n\n  clickedElement.classList.add('active');\n\n  /* remove class 'active' from all articles */\n\n  const activeArticles = document.querySelectorAll('.posts article.post.active');\n\n  for (let activeArticle of activeArticles) {\n    activeArticle.classList.remove('active');\n  }\n  /* get 'href' attribute from the clicked link */\n\n  const articleSelector = clickedElement.getAttribute('href');\n\n  /* find the correct article using the selector (value of 'href' attribute) */\n\n  const targetArticle = document.querySelector(articleSelector);\n\n  /* add class 'active' to the correct article */\n\n  targetArticle.classList.add('active');\n\n};\n\nconst optArticleSelector = '.post';\nconst optTitleSelector = '.post-title';\nconst optTitleListSelector = '.titles';\nconst optArticleTagsSelector = '.post-tags .list';\nconst optArticleAuthorSelector = '.post-author';\nconst optCloudClassCount  = 5;\n\nconst generateTitleLinks = function(customSelector = '') {\n\n  /* remove contents of titleList */\n\n  const titleList = document.querySelector(optTitleListSelector);\n  titleList.innerHTML = '';\n\n  /* for each article */\n\n  const articles = document.querySelectorAll(optArticleSelector + customSelector);\n  let html = '';\n\n  for (let article of articles) {\n\n    /* get the article id */\n\n    const articleId = article.getAttribute('id');\n\n    /* find the title element */\n    /* get the title from the title element */\n\n    const articleTitle = article.querySelector(optTitleSelector).innerHTML;\n\n    /* create HTML of the link */\n\n    const linkHTMLData = {id: articleId, title: articleTitle};\n    const linkHTML = templates.articleLink(linkHTMLData);\n\n    /* insert link into titleList */\n\n    html = html + linkHTML;\n  }\n\n  titleList.innerHTML = html;\n  const links = document.querySelectorAll('.titles a');\n\n  for (let link of links) {\n    link.addEventListener('click', titleClickHandler);\n  }\n};\n\ngenerateTitleLinks();\n\nconst calculateTagsParams = function (tags) {\n\n  const params = {\n    max: 0,\n    min: 999999\n  };\n\n  for (let tag in tags) {\n    params.max = Math.max(tags[tag], params.max);\n    params.min = Math.min(tags[tag], params.min);\n  }\n  return params;\n};\n\nconst calculateTagClass = function (count, params) {\n\n  const normalizedCount = count - params.min;\n  const normalizedMax = params.max - params.min;\n  const percentage = normalizedCount / normalizedMax;\n  const classNumber = Math.floor( percentage * (optCloudClassCount - 1) + 1 );\n\n  return classNumber;\n\n};\n\nconst generateTags = function (){\n\n  /* create a new variable allTags with an empty object */\n\n  let allTags = {};\n\n  /* find all articles */\n\n  const articles = document.querySelectorAll(optArticleSelector);\n\n  /* START LOOP: for every article: */\n\n  for (let article of articles) {\n\n    /* find tags wrapper */\n\n    const articleTagWrapper = article.querySelector(optArticleTagsSelector);\n\n    /* make html variable with empty string */\n\n    let html = '';\n\n    /* get tags from data-tags attribute */\n\n    const articleTags = article.getAttribute('data-tags');\n\n    /* split tags into array */\n\n    const articleTagsArray = articleTags.split(' ');\n\n    /* START LOOP: for each tag */\n\n\n    for (let tag of articleTagsArray) {\n\n      /* generate HTML of the link */\n\n      const linkHTMLData = {id: tag, title: tag};\n      const linkHTML = templates.tagLink(linkHTMLData);\n\n      /* add generated code to html variable */\n\n      html = html + linkHTML;\n\n      /* check if this link is NOT already in allTags */\n\n      if(!allTags.hasOwnProperty(tag)) {\n\n        /* add generated code to allTags array */\n\n        allTags[tag] = 1;\n\n      } else {\n\n        allTags[tag]++;\n\n      }\n      /* END LOOP: for each tag */\n\n    }\n\n    /* insert HTML of all the links into the tags wrapper */\n\n    articleTagWrapper.innerHTML = html;\n\n    /* END LOOP: for every article: */\n  }\n\n  /* find list of tags in right column */\n\n  const tagList = document.querySelector('.tags');\n\n  /* create variable for all links HTML code*/\n\n  const tagsParams = calculateTagsParams(allTags);\n\n\n  const allTagsData = {tags: []};\n\n  /* START LOOP: for each tag in allTags :*/\n\n  for (let tag in allTags) {\n\n    /* generate code of link and add it to allTagsHTML*/\n\n    allTagsData.tags.push({\n      tag: tag,\n      count: allTags[tag],\n      className: calculateTagClass(allTags[tag], tagsParams)\n    });\n  }\n\n  /* END LOOP: for each tag in allTags */\n  /* add html from allTagsHTML to tagList */\n\n  tagList.innerHTML = templates.tagCloudLink(allTagsData);\n};\n\ngenerateTags();\n\nconst tagClickHandler = function (event) {\n\n  /* prevent default action for this event */\n\n  event.preventDefault();\n\n  /* make new constant named \"clickedElement\" and give it the value of \"this\" */\n\n  const clickedElement = this;\n\n  /* make a new constant \"href\" and read the attribute \"href\" of the clicked element */\n\n  const href = clickedElement.getAttribute('href');\n\n  /* make a new constant \"tag\" and extract tag from the \"href\" constant */\n\n  const tag = href.replace('#tag-', '');\n\n  /* find all tag links with class active */\n\n  const tagActive = document.querySelectorAll('a.active[href^=\"#tag-\"]');\n\n  /* START LOOP: for each active tag link */\n\n  for (let activeTag of tagActive) {\n\n    /* remove class active */\n\n    activeTag.classList.remove('active');\n\n    /* END LOOP: for each active tag link */\n\n  }\n\n  /* find all tag links with \"href\" attribute equal to the \"href\" constant */\n\n  const tagLinks = document.querySelectorAll('a[href=\"' + href + '\"]');\n\n  /* START LOOP: for each found tag link */\n\n  for (let tagLink of tagLinks) {\n\n    /* add class active */\n\n    tagLink.classList.add('active');\n\n    /* END LOOP: for each found tag link */\n\n  }\n\n  /*  execute function \"generateTitleLinks\" with article selector as argument */\n\n  generateTitleLinks('[data-tags~=\"' + tag + '\"]');\n  console.log(generateTitleLinks);\n\n};\n\nconst addClickListenersToTags = function () {\n\n  /* find all links to tags */\n\n  const allLinksToTags = document.querySelectorAll ('a[href^=\"#tag-\"]');\n\n  /* START LOOP: for each link */\n\n  for (let allLinkToTags of allLinksToTags) {\n\n    /* add tagClickHandler as event listener for that link */\n\n    allLinkToTags.addEventListener('click', tagClickHandler);\n\n    /* END LOOP: for each link */\n\n  }\n};\n\naddClickListenersToTags();\n\nconst calculateAuthorsParams = function (authors) {\n\n  const params = {\n    max: 0,\n    min: 999999\n  };\n\n  for (let author in authors) {\n    params.max = Math.max(authors[author], params.max);\n    params.min = Math.min(authors[author], params.min);\n  }\n  return params;\n};\n\nconst calculateAuthorClass = function (count, params) {\n\n  const normalizedCount = count - params.min;\n  const normalizedMax = params.max - params.min;\n  const percentage = normalizedCount / normalizedMax;\n  const classNumber = Math.floor( percentage * (optCloudClassCount - 1) + 1 );\n  return classNumber;\n\n};\n\n\nconst generateAuthors = function (){\n\n  /* create a new variable allTags with an empty object */\n  let allAuthors = {};\n\n  /* find all articles */\n\n  const articles = document.querySelectorAll(optArticleSelector);\n\n  /* START LOOP: for every article: */\n\n  for (let article of articles) {\n\n    /* find tags wrapper */\n\n    const articleAuthorWrapper = article.querySelector(optArticleAuthorSelector);\n\n    /* make html variable with empty string */\n\n    let html = '';\n\n    /* get tags from data-tags attribute */\n\n    const articleAuthors = article.getAttribute('data-author');\n\n    /* generate HTML of the link */\n\n    const linkHTMLData = {id: articleAuthors, title: articleAuthors};\n    const linkHTML = templates.authorLink(linkHTMLData);\n\n    /* add generated code to html variable */\n\n    html = html + linkHTML;\n    /* check if this link is NOT already in allTags */\n\n    if(!allAuthors.hasOwnProperty(articleAuthors)) {\n\n      /* add generated code to allTags array */\n\n      allAuthors[articleAuthors] = 1;\n\n    } else {\n\n      allAuthors[articleAuthors]++;\n\n    }\n\n    /* insert HTML of all the links into the tags wrapper */\n\n    articleAuthorWrapper.innerHTML = html;\n\n    /* END LOOP: for every article: */\n\n  }\n  /* find list of tags in right column */\n\n  const authorCloudList = document.querySelector('.authors');\n  /* create variable for all links HTML code*/\n\n  const authorParams = calculateAuthorsParams(allAuthors);\n\n  let allAuthorsData = {authors: []};\n\n  /* generate code of link and add it to allTagsHTML*/\n  for (let allAuthor in allAuthors ) {\n\n    allAuthorsData.authors.push({\n\n      author: allAuthor,\n      count: allAuthors[allAuthor],\n      className: calculateAuthorClass(allAuthors[allAuthor], authorParams)\n\n    });\n    /* END LOOP: for each tag in allTags */\n  }\n  /* add html from allTagsHTML to tagList */\n\n  authorCloudList.innerHTML = templates.authorCloudLink(allAuthorsData);\n};\n\ngenerateAuthors();\n\nconst authorClickHandler = function (event) {\n\n  /* prevent default action for this event */\n\n  event.preventDefault();\n\n  /* make new constant named \"clickedElement\" and give it the value of \"this\" */\n\n  const clickedElement = this;\n\n  /* make a new constant \"href\" and read the attribute \"href\" of the clicked element */\n\n  const href = clickedElement.getAttribute('href');\n\n  /* make a new constant \"tag\" and extract tag from the \"href\" constant */\n\n  const author = href.replace('#author-', '');\n\n  /* find all tag links with class active */\n\n  const authorActive = document.querySelectorAll('a.active[href^=\"#author-\"]');\n\n  /* START LOOP: for each active tag link */\n\n  for (let activeAuthor of authorActive) {\n\n    /* remove class active */\n\n    activeAuthor.classList.remove('active');\n\n  }\n\n  /* find all tag links with \"href\" attribute equal to the \"href\" constant */\n\n  const authorLinks = document.querySelectorAll('a[href=\"' + href + '\"]');\n\n  /* START LOOP: for each found tag link */\n\n  for (let authorLink of authorLinks) {\n\n    /*  add class active */\n\n    authorLink.classList.add('active');\n\n    /* END LOOP: for each found tag link */\n\n  }\n\n  /* execute function \"generateTitleLinks\" with article selector as argument */\n\n  generateTitleLinks('[data-author=\"' + author + '\"]');\n\n};\n\nconst addClickListenersToAuthors = function () {\n\n  /* find all links to tags */\n\n  const allLinksToAuthors = document.querySelectorAll ('a[href^=\"#author\"]');\n\n\n  /* START LOOP: for each link */\n\n  for (let allLinkToAuthors of allLinksToAuthors) {\n\n    /* add tagClickHandler as event listener for that link */\n\n    allLinkToAuthors.addEventListener('click', authorClickHandler);\n\n    /* END LOOP: for each link */\n\n  }\n};\n\naddClickListenersToAuthors();\n\nconst allPostRefreshArticleList = document.getElementById('all-posts');\n\nallPostRefreshArticleList.addEventListener('click', function() {\n  generateTitleLinks();\n});\n\n\n"],"file":"script.dev.js"}